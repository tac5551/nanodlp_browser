<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 56</value>
  </metadata>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAACogBUapX4S1p92DP+mfxP/rYcb/7SPIf+5lif/vp0t/8OjMf/Hpzb/yao43sqs
        OWbGpjUIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJlvBRCZbgXamnAH/510Cv+heQ7/pn8T/6yGGf+yjiD/uZYn/7+e
        Lv/GpjT/y6w6/82vPODMrTtqyKg2CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACabwYCmm8GoptwB/+ccgn/nnQK/592DP+heA3/onoP/6R8
        Ef+lfhL/p38U/6iBFf+qhBf/rogb/7OPIf/Any7it5Mkuq6JHLqmfxS6nnULuphtBF4AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJtwB1ybcQj/nXMJ/551C/+gdw3/onkO/6N7
        EP+lfRH/pn8T/6iAFf+pghb/q4QY/6yGGf+1kCL/yKk3/8WlNP+3kyT/rokc/6Z/FP+fdQzMmW8GCgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACccggknHIJ8J50Cv+fdgz/oXgN/6J6
        D/+kfBH/pX4S/6d/FP+ogRX/qoMX/6uFGf+uiRz/wJ8u/82vPP/NsDz/waAw/7eTJP+uiRz/p38U7KF4
        DiIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnXQKBp10CsifdQv/oHcN/6J5
        Dv+jexD/pX0R/6Z/E/+ogBX/qYIW/6uEGP+shhn/tZIj/8ipN//NsD3/zbA9/82vPP+/nS3/t5Mk/66J
        HPyoghZMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACedQuGn3YM/6F4
        Df+ieg//pHwR/6V+Ev+nfxT/qIEV/6qDF/+rhRn/r4od/72bK//IqTf/zK07/82wPf/NsD3/yqw5/7+d
        Lf+3kyT/sIsehAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAn3YMRKB3
        DfyieQ7/o3sQ/6V9Ef+mfxP/qIAV/6mCFv+rhBj/rIYa/7ybM//QtVD/y65D/8ipN//MrTv/zq88/86v
        PP/IqTf/v50t/7iUJbqyjSAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKF4
        DRaheA7konoP/6R8Ef+lfhL/p38U/6iBFf+qgxf/q4UZ/7OPJ//Os1j/2cJs/9nCbP/Zwmv/z7NK0syt
        O//NsD3/zbA9/8enNv+/ni3guZcnFgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACieQ4ConkPsKN7EP+lfRH/pn8T/6iAFf+pghb/q4QY/62HG//Ep0v/3Mh8/97KgP/eyoD/3sp//93J
        frzaxXIGza47es2wPf/Nrzz/xqY1+MGgLzgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKN7EGykfBH/pX4S/6d/FP+ogRX/qoMX/6uFGf+3lTL/18J5/+HQj//h0I//4dCP/+HQ
        j//h0I7Y4M6KEgAAAADOsD0CzrA9cMyuPPzJqjdqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACkfBEupX0S9qZ/E/+ogBX/qYIW/6uEGP+uiR7/yrBe/+LSlf/j05f/49OX/+PT
        l//j05f/49OX7OPTlSYAAAAAAAAAAAAAAAAAAAAAza88PMqsOQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAApX4SCqV+EtSnfxT/qIEV/6qDF/+rhRn/rYcavNjEfrLk1Jj/5NOY/+TU
        mP/k05j/5NSY/+PUmPjj1JhAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACnfxSWqIAV/6mCFv+rhBj/rIYZ7K2HGmKuiBsC5NSYsuTT
        mP/k1Jj/5NOY/+TUmP/k1Jj/5NSYYgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAqIAVUqiBFf+qgxf/q4UZ/6yGGqithxoYAAAAAAAA
        AADk1JjU5NSY/+TUmP/k1Jj/5NSY/+TUmIrk1JgCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKmCFhypghbsq4QY/6yGGeKthxpOrogbAgAA
        AAAAAAAA5NSYBOTUmPLj05j/49SY/+PTmP/k1Jew5NSYBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACqhBcEqoQXvquFGfyshhqUrYcaDgAA
        AAAAAAAAAAAAAAAAAADk05ca5NSY/+TTmP/k1Jj/5NOYzuPUmAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKuFGHyshhnUrIYaOq6I
        GwIAAAAAAAAAAAAAAAAAAAAAAAAAAOTUmDzk1Jj/5NOY/+TUl+Tk1JgeAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACshho0rIYaeq2H
        GggAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5NSYXOTUmP/j1Jj049OYNgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAK2H
        GgwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADk1Jh+5NOY/+TUmFYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOTUmKDk1Jh85NSYAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA5NSYZuTU
        mAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/////3////+f////x////+H////wf///+B////wH///+Af///w
        B///+AH///gAf//wAAH/8AAB/+AAA//AAAf/gAAH/4AAD/8AAB/+AAY//gAPf/wAH//4AD//8GB///Dg
        f//j4P//x+H//9/j////5////+/////f////////
</value>
  </data>
  <metadata name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
</root>